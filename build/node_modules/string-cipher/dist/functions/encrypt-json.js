"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encryptJson = void 0;
const make_string_encrypter_1 = require("./make-string-encrypter");
const encrypt = make_string_encrypter_1.makeStringEncrypter({ algorithm: 'aes-256-gcm' });
/**
 * An async encrypt function that can be used to encrypt JSON objects,
 * This function returns plainText by using a user supplied password
 * @note
 * * outputEncoding = 'base64',
 * * stringEncoding = 'utf8',
 * * authTagLength = 16,
 * * ivLength = 12,
 * * saltLength = 32,
 * * iterations = 1,
 * * digest = 'sha256'
 * @example
 * ```
 * const cipherText = encrypt('some text', 'some password');
 * ```
 * @remark
 * Out put string is concatinates salt,iv,authTags and encryptedtext
 * in this precise order as no delimiters are used decrption function
 * should be created with same salt iv and auth tags length
 */
const encryptJson = (payload, password) => encrypt(JSON.stringify(payload), password);
exports.encryptJson = encryptJson;
