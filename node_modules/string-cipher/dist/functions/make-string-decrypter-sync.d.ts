import { EncryptionFunction, DecrypterOptions } from '../types';
/**
 * Create a sync decrypt  function that can be used to decrypt UTF-8 strings,
 * The return function takes cipherText and a key to generate pbkdf2Sync
 * text based on AES-GCM with IV length of 16 and uses scryptSync to
 * generate 32 byte (256 bit) Key
 * @default
 * * inputEncoding = 'base64',
 * * stringEncoding = 'utf8',
 * * authTagLength = 16,
 * * ivLength = 12,
 * * saltLength = 32,
 * * iterations = 1,
 * * digest = 'sha256'
 * @example
 * ```
 * const decrypt = makeStringDecrypterSync({});
 * const plainText = decrypt('encrypted message', 'some password');
 * ```
 * @note
 * Use same options as used with makeStringEncrypter
 */
export declare const makeStringDecrypterSync: (opt: DecrypterOptions) => EncryptionFunction<string>;
